<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.berru.app</groupId>
    <artifactId>springbooth2</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>springbooth2</name>
    <description>springbooth2</description>
    <url/>

    <properties>
        <java.version>21</java.version>

        <maven.plugin.checkstyle.version>3.4.0</maven.plugin.checkstyle.version>
        <maven.checkstyle.puppycrawl.version>10.17.0</maven.checkstyle.puppycrawl.version>

        <!-- Checkstyle Rules -->
        <checkstyle.check.skip>false</checkstyle.check.skip>
        <checkstyle.failsOnError>true</checkstyle.failsOnError>
        <checkstyle.failOnValidation>false</checkstyle.failOnValidation>
        <checkstyle.violationSeverity>warning</checkstyle.violationSeverity>
        <checkstyle.logViolationsToConsole>true</checkstyle.logViolationsToConsole>
        <checkstyle.consoleOutput>true</checkstyle.consoleOutput>
        <checkstyle.maxAllowedViolations>0</checkstyle.maxAllowedViolations>

        <maven.plugin.spotbugs.version>4.8.6.2</maven.plugin.spotbugs.version>

        <!-- Spotbugs Rules -->
        <spotbugs.check.skip>false</spotbugs.check.skip>
        <spotbugs.fail.on.error>false</spotbugs.fail.on.error>
        <spotbugs.effort>Max</spotbugs.effort>
        <spotbugs.threshold>Low</spotbugs.threshold>

        <jacoco.check.skip>false</jacoco.check.skip>
        <jacoco.halt.on.failure>false</jacoco.halt.on.failure>
        <jacoco.rule.element.coverage>CLASS</jacoco.rule.element.coverage>
        <jacoco.rule.branch.coverage>0.70</jacoco.rule.branch.coverage>
        <jacoco.rule.line.coverage>0.80</jacoco.rule.line.coverage>
        <jacoco.rule.line.length>160</jacoco.rule.line.length>
        <jacoco.coverage.destFile>target/coverage-reports/jacoco-unit.exec</jacoco.coverage.destFile>
        <jacoco.exclude.default>
            **/dto/**,**/model/**,**/entity/**,**/enums/**,**/mapper/**,**/builders/**,**/controller/**Controller**,**/controller/**/**Controller**,**/controller/migration/**,**/controller/query/**,**/controller/rest/**,**/controller/resource/**,**/controller/capability/**,**/client/**,**/exception/**,**/**Application**,${basedir}/target/**,**/configuration/**,**/configurations/**,**/util/**,**/clients/**,**/lib/**,**/context/**
        </jacoco.exclude.default>
        <jacoco.excludes>src/test/**</jacoco.excludes>
        <jacoco.exclude.list>${jacoco.exclude.default},${jacoco.excludes}</jacoco.exclude.list>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>1.5.5.Final</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>1.5.5.Final</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>3.0.0</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>3.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.2.0</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.24.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.11.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>6.1.6</version>
            <scope>test</scope>
        </dependency>

        <!-- Spring Boot Starter Data Redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <!-- Spring Boot Starter Cache -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-streams</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
        </dependency>
        <!-- Jackson JSON Serializer (Redis için JSON serileştirme yaparken kullanılır) -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.17.2</version>
        </dependency>
        <dependency>
            <groupId>cz.jirutka.rsql</groupId>
            <artifactId>rsql-parser</artifactId>
            <version>2.1.0</version>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <!-- Spring Boot Maven Plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Jacoco Maven Plugin -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-jacoco-check</id>
                        <phase>package</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <excludes>${jacoco.exclude.list}</excludes>
                            <skip>${jacoco.check.skip}</skip>
                            <haltOnFailure>${jacoco.halt.on.failure}</haltOnFailure>
                            <rules>
                                <rule>
                                    <element>${jacoco.rule.element.coverage}</element>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.rule.line.coverage}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.rule.branch.coverage}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                                <rule implementation="org.jacoco.maven.RuleConfiguration">
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.80</minimum>
                                        </limit>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>CLASS</counter>
                                            <value>MISSEDCOUNT</value>
                                            <maximum>0</maximum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Checkstyle: Ensures similar code structure -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.plugin.checkstyle.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${maven.checkstyle.puppycrawl.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <configLocation>
                        ${project.basedir}/checkstyle.xml
                    </configLocation>
                    <failsOnError>${checkstyle.failsOnError}</failsOnError>
                    <failOnViolation>${checkstyle.failOnValidation}</failOnViolation>
                    <maxAllowedViolations>${checkstyle.maxAllowedViolations}</maxAllowedViolations>
                    <violationSeverity>${checkstyle.violationSeverity}</violationSeverity>
                    <logViolationsToConsole>${checkstyle.logViolationsToConsole}</logViolationsToConsole>
                    <consoleOutput>${checkstyle.consoleOutput}</consoleOutput>
                    <skip>${checkstyle.check.skip}</skip>
                    <propertyExpansion>lineLength=${jacoco.rule.line.length}</propertyExpansion>
                    <sourceDirectories>
                        <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                    </sourceDirectories>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Spotbugs: Ensures well-know bugs never appear -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${maven.plugin.spotbugs.version}</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <xmlOutputDirectory>target/site</xmlOutputDirectory>
                    <skip>${spotbugs.check.skip}</skip>
                    <failOnError>${spotbugs.fail.on.error}</failOnError>
                    <effort>${spotbugs.effort}</effort>
                    <threshold>${spotbugs.threshold}</threshold>
                    <excludeFilterFile>
                        ${project.basedir}/spotbugs-exclude.xml
                    </excludeFilterFile>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <!-- Jacoco Report -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <!-- Checkstyle Report -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.4.0</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
</project>